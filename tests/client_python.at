# -*- Autotest -*-

AT_BANNER([client_python])

## --------- ##
## verbosity ##
## --------- ##

AT_PYTESTFUN([verbosity], [[
import sys
import os
import unittest

sys.path.insert(0, "../../../src/client-python")
sys.path.insert(0, "../../../src/client-python/.libs")


class TestReportClientVerbose(unittest.TestCase):
    def setUp(self):
        try:
            del os.environ["ABRT_VERBOSE"]
        except:
            pass
        os.unsetenv("ABRT_VERBOSE")
        self.clientpython = __import__("client-python", globals(), locals(), [], -1)
        reload(self.clientpython)
        sys.modules["clientpython"] = self.clientpython

    def tearDown(self):
        del sys.modules["clientpython"]

    def test_default(self):
        self.assertEquals(self.clientpython.verbose, 0)

    def test_assign(self):
        self.clientpython.set_verbosity(1)
        self.assertEquals(self.clientpython.verbose, 1)
        self.assertEquals(os.environ["ABRT_VERBOSE"], "1")

    def test_load_from_environ(self):
        os.environ["ABRT_VERBOSE"] = "2"
        reload(self.clientpython)
        self.assertEquals(self.clientpython.verbose, 2)

    def test_recover_from_invalid_environ(self):
        os.environ["ABRT_VERBOSE"] = "foo"
        reload(self.clientpython)
        self.assertEquals(self.clientpython.verbose, 0)


if __name__ == "__main__":
    unittest.main()
]])
